{"Classes":[{"constructors":[],"methods":[{"signature":"Validate()","jsName":"Validate"}],"jsClassName":"Cinemachine.AxisBase","originalClassName":"AxisBase"},{"constructors":[{"signature":"AxisState(float minValue, float maxValue, Boolean wrap, Boolean rangeLocked, float maxSpeed, float accelTime, float decelTime, String name, Boolean invert)","jsName":"$ctor1"}],"methods":[{"signature":"Validate()","jsName":"Validate"},{"signature":"Reset()","jsName":"Reset"},{"signature":"Update(float deltaTime)","jsName":"Update"},{"signature":"ClampValue(float v)","jsName":"ClampValue"},{"signature":"MaxSpeedUpdate(float input, float deltaTime)","jsName":"MaxSpeedUpdate"},{"signature":"GetMaxSpeed()","jsName":"GetMaxSpeed"}],"jsClassName":"Cinemachine.AxisState","originalClassName":"AxisState"},{"constructors":[{"signature":"Recentering(Boolean enabled, float waitTime, float recenteringTime)","jsName":"$ctor1"}],"methods":[{"signature":"Validate()","jsName":"Validate"},{"signature":"CopyStateFrom(Recentering other)","jsName":"CopyStateFrom"},{"signature":"CancelRecentering()","jsName":"CancelRecentering"},{"signature":"RecenterNow()","jsName":"RecenterNow"},{"signature":"DoRecentering(AxisState axis, float deltaTime, float recenterTarget)","jsName":"DoRecentering"},{"signature":"LegacyUpgrade(Int32 heading, Int32 velocityFilter)","jsName":"LegacyUpgrade"}],"jsClassName":"Cinemachine.AxisState.Recentering","originalClassName":"Recentering"},{"constructors":[],"methods":[{"signature":"Lerp(CameraState stateA, CameraState stateB, float t)","jsName":"Lerp"},{"signature":"InterpolateFOV(float fovA, float fovB, float dA, float dB, float t)","jsName":"InterpolateFOV"},{"signature":"ApplyPosBlendHint(Vector3 posA, BlendHintValue hintA, Vector3 posB, BlendHintValue hintB, Vector3 original, Vector3 blended)","jsName":"ApplyPosBlendHint"},{"signature":"ApplyRotBlendHint(Quaternion rotA, BlendHintValue hintA, Quaternion rotB, BlendHintValue hintB, Quaternion original, Quaternion blended)","jsName":"ApplyRotBlendHint"},{"signature":"GetCustomBlendable(Int32 index)","jsName":"GetCustomBlendable"},{"signature":"FindCustomBlendable(Object custom)","jsName":"FindCustomBlendable"},{"signature":"AddCustomBlendable(CustomBlendable b)","jsName":"AddCustomBlendable"},{"signature":"InterpolatePosition(Vector3 posA, Vector3 pivotA, Vector3 posB, Vector3 pivotB, float t)","jsName":"InterpolatePosition"}],"jsClassName":"Cinemachine.CameraState","originalClassName":"CameraState"},{"constructors":[{"signature":"CustomBlendable(Object custom, float weight)","jsName":"$ctor1"}],"methods":[],"jsClassName":"Cinemachine.CameraState.CustomBlendable","originalClassName":"CustomBlendable"},{"constructors":[],"methods":[{"signature":"UpdateFollowTargetCache()","jsName":"UpdateFollowTargetCache"},{"signature":"UpdateLookAtTargetCache()","jsName":"UpdateLookAtTargetCache"},{"signature":"PrePipelineMutateCameraState(CameraState curState, float deltaTime)","jsName":"PrePipelineMutateCameraState"},{"signature":"OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime, TransitionParams transitionParams)","jsName":"OnTransitionFromCamera"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"}],"jsClassName":"Cinemachine.CinemachineComponentBase","originalClassName":"CinemachineComponentBase"},{"constructors":[{"signature":"CinemachineBlend(ICinemachineCamera a, ICinemachineCamera b, AnimationCurve curve, float duration, float t)","jsName":"ctor"}],"methods":[{"signature":"Uses(ICinemachineCamera cam)","jsName":"Uses"},{"signature":"UpdateCameraState(Vector3 worldUp, float deltaTime)","jsName":"UpdateCameraState"}],"jsClassName":"Cinemachine.CinemachineBlend","originalClassName":"CinemachineBlend"},{"constructors":[{"signature":"CinemachineBlendDefinition(Style style, float time)","jsName":"$ctor1"}],"methods":[{"signature":"CreateStandardCurves()","jsName":"CreateStandardCurves"}],"jsClassName":"Cinemachine.CinemachineBlendDefinition","originalClassName":"CinemachineBlendDefinition"},{"constructors":[],"methods":[{"signature":"GetBlendForVirtualCameras(String fromCameraName, String toCameraName, CinemachineBlendDefinition defaultBlend)","jsName":"GetBlendForVirtualCameras"}],"jsClassName":"Cinemachine.CinemachineBlenderSettings","originalClassName":"CinemachineBlenderSettings"},{"constructors":[],"methods":[{"signature":"GetSoloGUIColor()","jsName":"GetSoloGUIColor"},{"signature":"DeepCamBFromBlend(CinemachineBlend blend)","jsName":"DeepCamBFromBlend"},{"signature":"OnEnable()","jsName":"OnEnable"},{"signature":"OnDisable()","jsName":"OnDisable"},{"signature":"Start()","jsName":"Start"},{"signature":"OnGuiHandler()","jsName":"OnGuiHandler"},{"signature":"AfterPhysics()","jsName":"AfterPhysics"},{"signature":"LateUpdate()","jsName":"LateUpdate"},{"signature":"GetEffectiveDeltaTime(Boolean fixedDelta)","jsName":"GetEffectiveDeltaTime"},{"signature":"UpdateVirtualCameras(UpdateFilter updateFilter, float deltaTime)","jsName":"UpdateVirtualCameras"},{"signature":"GetBrainFrame(Int32 withId)","jsName":"GetBrainFrame"},{"signature":"SetCameraOverride(Int32 overrideId, ICinemachineCamera camA, ICinemachineCamera camB, float weightB, float deltaTime)","jsName":"SetCameraOverride"},{"signature":"ReleaseCameraOverride(Int32 overrideId)","jsName":"ReleaseCameraOverride"},{"signature":"ProcessActiveCamera(float deltaTime)","jsName":"ProcessActiveCamera"},{"signature":"UpdateFrame0(float deltaTime)","jsName":"UpdateFrame0"},{"signature":"UpdateCurrentLiveCameras()","jsName":"UpdateCurrentLiveCameras"},{"signature":"IsLive(ICinemachineCamera vcam, Boolean dominantChildOnly)","jsName":"IsLive"},{"signature":"TopCameraFromPriorityQueue()","jsName":"TopCameraFromPriorityQueue"},{"signature":"LookupBlend(ICinemachineCamera fromKey, ICinemachineCamera toKey)","jsName":"LookupBlend"},{"signature":"PushStateToUnityCamera(CameraState state)","jsName":"PushStateToUnityCamera"}],"jsClassName":"Cinemachine.CinemachineBrain","originalClassName":"CinemachineBrain"},{"constructors":[],"methods":[{"signature":"Awake()","jsName":"Awake"},{"signature":"OnDestroy()","jsName":"OnDestroy"},{"signature":"ConnectToVcam(Boolean connect)","jsName":"ConnectToVcam"},{"signature":"InvokePostPipelineStageCallback(CinemachineVirtualCameraBase vcam, Stage stage, CameraState state, float deltaTime)","jsName":"InvokePostPipelineStageCallback"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"},{"signature":"OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)","jsName":"OnTransitionFromCamera"},{"signature":"GetExtraState(ICinemachineCamera vcam)","jsName":"GetExtraState"},{"signature":"GetAllExtraStates()","jsName":"GetAllExtraStates"}],"jsClassName":"Cinemachine.CinemachineExtension","originalClassName":"CinemachineExtension"},{"constructors":[],"methods":[{"signature":"AddPointToDebugPath(Vector3 p)","jsName":"AddPointToDebugPath"},{"signature":"ApplyDistanceSmoothing(float distance, float smoothingTime)","jsName":"ApplyDistanceSmoothing"},{"signature":"UpdateDistanceSmoothing(float distance, float smoothingTime)","jsName":"UpdateDistanceSmoothing"},{"signature":"ResetDistanceSmoothing(float smoothingTime)","jsName":"ResetDistanceSmoothing"}],"jsClassName":"Cinemachine.CinemachineCollider+VcamExtraState","originalClassName":"VcamExtraState"},{"constructors":[],"methods":[{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"GenerateImpulseAt(Vector3 position, Vector3 velocity)","jsName":"GenerateImpulseAt"},{"signature":"GenerateImpulse(Vector3 velocity)","jsName":"GenerateImpulse$1"},{"signature":"GenerateImpulse()","jsName":"GenerateImpulse"}],"jsClassName":"Cinemachine.CinemachineImpulseSource","originalClassName":"CinemachineImpulseSource"},{"constructors":[],"methods":[{"signature":"UpdateCache(LensSettings lens, Rect softGuide, Rect hardGuide, float targetDistance)","jsName":"UpdateCache"},{"signature":"ScreenToFOV(Rect rScreen, float fov, float fovH, float aspect)","jsName":"ScreenToFOV"}],"jsClassName":"Cinemachine.CinemachineComposer+FovCache","originalClassName":"FovCache"},{"constructors":[],"methods":[{"signature":"InitializeModule()","jsName":"InitializeModule"},{"signature":"GetUpdateTarget(CinemachineVirtualCameraBase vcam)","jsName":"GetUpdateTarget"},{"signature":"GetActiveBrain(Int32 index)","jsName":"GetActiveBrain"},{"signature":"AddActiveBrain(CinemachineBrain brain)","jsName":"AddActiveBrain"},{"signature":"RemoveActiveBrain(CinemachineBrain brain)","jsName":"RemoveActiveBrain"},{"signature":"GetVirtualCamera(Int32 index)","jsName":"GetVirtualCamera"},{"signature":"AddActiveCamera(CinemachineVirtualCameraBase vcam)","jsName":"AddActiveCamera"},{"signature":"RemoveActiveCamera(CinemachineVirtualCameraBase vcam)","jsName":"RemoveActiveCamera"},{"signature":"CameraAwakened(CinemachineVirtualCameraBase vcam)","jsName":"CameraAwakened"},{"signature":"CameraDestroyed(CinemachineVirtualCameraBase vcam)","jsName":"CameraDestroyed"},{"signature":"UpdateAllActiveVirtualCameras(Int32 layerMask, Vector3 worldUp, float deltaTime)","jsName":"UpdateAllActiveVirtualCameras"},{"signature":"UpdateVirtualCamera(CinemachineVirtualCameraBase vcam, Vector3 worldUp, float deltaTime)","jsName":"UpdateVirtualCamera"},{"signature":"GetVcamUpdateStatus(CinemachineVirtualCameraBase vcam)","jsName":"GetVcamUpdateStatus"},{"signature":"IsLive(ICinemachineCamera vcam)","jsName":"IsLive"},{"signature":"GenerateCameraActivationEvent(ICinemachineCamera vcam, ICinemachineCamera vcamFrom)","jsName":"GenerateCameraActivationEvent"},{"signature":"GenerateCameraCutEvent(ICinemachineCamera vcam)","jsName":"GenerateCameraCutEvent"},{"signature":"FindPotentialTargetBrain(CinemachineVirtualCameraBase vcam)","jsName":"FindPotentialTargetBrain"}],"jsClassName":"Cinemachine.CinemachineCore","originalClassName":"CinemachineCore"},{"constructors":[{"signature":"UpdateStatus()","jsName":"ctor"}],"methods":[],"jsClassName":"Cinemachine.CinemachineCore.UpdateStatus","originalClassName":"UpdateStatus"},{"constructors":[],"methods":[{"signature":"FixedUpdate()","jsName":"FixedUpdate"},{"signature":"Update()","jsName":"Update"},{"signature":"LateUpdate()","jsName":"LateUpdate"},{"signature":"SetCartPosition(float distanceAlongPath)","jsName":"SetCartPosition"}],"jsClassName":"Cinemachine.CinemachineDollyCart","originalClassName":"CinemachineDollyCart"},{"constructors":[{"signature":"CinemachineEmbeddedAssetPropertyAttribute(Boolean warnIfNull)","jsName":"ctor"}],"methods":[],"jsClassName":"Cinemachine.CinemachineEmbeddedAssetPropertyAttribute","originalClassName":"CinemachineEmbeddedAssetPropertyAttribute"},{"constructors":[{"signature":"Orbit(float h, float r)","jsName":"$ctor1"}],"methods":[],"jsClassName":"Cinemachine.CinemachineFreeLook.Orbit","originalClassName":"Orbit"},{"constructors":[],"methods":[{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"CreateEvent(Vector3 position, Vector3 velocity)","jsName":"CreateEvent"}],"jsClassName":"Cinemachine.CinemachineImpulseDefinition","originalClassName":"CinemachineImpulseDefinition"},{"constructors":[{"signature":"CinemachineImpulseManager()","jsName":"ctor"}],"methods":[{"signature":"GetImpulseAt(Vector3 listenerLocation, Boolean distance2D, Int32 channelMask, Vector3 pos, Quaternion rot)","jsName":"GetImpulseAt"},{"signature":"NewImpulseEvent()","jsName":"NewImpulseEvent"},{"signature":"AddImpulseEvent(ImpulseEvent e)","jsName":"AddImpulseEvent"},{"signature":"Clear()","jsName":"Clear"}],"jsClassName":"Cinemachine.CinemachineImpulseManager","originalClassName":"CinemachineImpulseManager"},{"constructors":[],"methods":[{"signature":"Default()","jsName":"Default"},{"signature":"GetValueAt(float offset)","jsName":"GetValueAt"},{"signature":"ChangeStopTime(float offset, Boolean forceNoDecay)","jsName":"ChangeStopTime"},{"signature":"Clear()","jsName":"Clear"},{"signature":"Validate()","jsName":"Validate"}],"jsClassName":"Cinemachine.CinemachineImpulseManager+EnvelopeDefinition","originalClassName":"EnvelopeDefinition"},{"constructors":[{"signature":"ImpulseEvent()","jsName":"ctor"}],"methods":[{"signature":"Cancel(float time, Boolean forceNoDecay)","jsName":"Cancel"},{"signature":"DistanceDecay(float distance)","jsName":"DistanceDecay"},{"signature":"GetDecayedSignal(Vector3 listenerPosition, Boolean use2D, Vector3 pos, Quaternion rot)","jsName":"GetDecayedSignal"},{"signature":"Clear()","jsName":"Clear"}],"jsClassName":"Cinemachine.CinemachineImpulseManager.ImpulseEvent","originalClassName":"ImpulseEvent"},{"constructors":[],"methods":[{"signature":"Validate()","jsName":"Validate"},{"signature":"Update(float deltaTime, AxisBase axis)","jsName":"Update"},{"signature":"Update(float deltaTime, AxisState axis)","jsName":"Update$1"},{"signature":"ClampValue(AxisBase axis, float v)","jsName":"ClampValue"}],"jsClassName":"Cinemachine.CinemachineInputAxisDriver","originalClassName":"CinemachineInputAxisDriver"},{"constructors":[{"signature":"Heading(HeadingDefinition def, Int32 filterStrength, float bias)","jsName":"$ctor1"}],"methods":[],"jsClassName":"Cinemachine.CinemachineOrbitalTransposer.Heading","originalClassName":"Heading"},{"constructors":[],"methods":[{"signature":"StandardizePos(float pos)","jsName":"StandardizePos"},{"signature":"FindClosestPoint(Vector3 p, Int32 startSegment, Int32 searchRadius, Int32 stepsPerSegment)","jsName":"FindClosestPoint"},{"signature":"MinUnit(PositionUnits units)","jsName":"MinUnit"},{"signature":"MaxUnit(PositionUnits units)","jsName":"MaxUnit"},{"signature":"StandardizeUnit(float pos, PositionUnits units)","jsName":"StandardizeUnit"},{"signature":"EvaluatePositionAtUnit(float pos, PositionUnits units)","jsName":"EvaluatePositionAtUnit"},{"signature":"EvaluateTangentAtUnit(float pos, PositionUnits units)","jsName":"EvaluateTangentAtUnit"},{"signature":"EvaluateOrientationAtUnit(float pos, PositionUnits units)","jsName":"EvaluateOrientationAtUnit"},{"signature":"InvalidateDistanceCache()","jsName":"InvalidateDistanceCache"},{"signature":"DistanceCacheIsValid()","jsName":"DistanceCacheIsValid"},{"signature":"StandardizePathDistance(float distance)","jsName":"StandardizePathDistance"},{"signature":"ToNativePathUnits(float pos, PositionUnits units)","jsName":"ToNativePathUnits"},{"signature":"FromPathNativeUnits(float pos, PositionUnits units)","jsName":"FromPathNativeUnits"},{"signature":"ResamplePath(Int32 stepsPerSegment)","jsName":"ResamplePath"}],"jsClassName":"Cinemachine.CinemachinePathBase","originalClassName":"CinemachinePathBase"},{"constructors":[],"methods":[{"signature":"FromVector4(Vector4 v)","jsName":"FromVector4"}],"jsClassName":"Cinemachine.CinemachineSmoothPath+Waypoint","originalClassName":"Waypoint"},{"constructors":[{"signature":"ParentHash(Int32 h, Int32 p)","jsName":"$ctor1"}],"methods":[],"jsClassName":"Cinemachine.CinemachineStateDrivenCamera.ParentHash","originalClassName":"ParentHash"},{"constructors":[{"signature":"AutoDolly(Boolean enabled, float positionOffset, Int32 searchRadius, Int32 stepsPerSegment)","jsName":"$ctor1"}],"methods":[],"jsClassName":"Cinemachine.CinemachineTrackedDolly.AutoDolly","originalClassName":"AutoDolly"},{"constructors":[],"methods":[{"signature":"Filter(GameObject other)","jsName":"Filter"},{"signature":"InternalDoTriggerEnter(GameObject other)","jsName":"InternalDoTriggerEnter"},{"signature":"InternalDoTriggerExit(GameObject other)","jsName":"InternalDoTriggerExit"},{"signature":"OnEnable()","jsName":"OnEnable"},{"signature":"OnTriggerEnter(Collider other)","jsName":"OnTriggerEnter"},{"signature":"OnTriggerExit(Collider other)","jsName":"OnTriggerExit"},{"signature":"OnCollisionEnter(Collision other)","jsName":"OnCollisionEnter"},{"signature":"OnCollisionExit(Collision other)","jsName":"OnCollisionExit"},{"signature":"OnTriggerEnter2D(Collider2D other)","jsName":"OnTriggerEnter2D"},{"signature":"OnTriggerExit2D(Collider2D other)","jsName":"OnTriggerExit2D"},{"signature":"OnCollisionEnter2D(Collision2D other)","jsName":"OnCollisionEnter2D"},{"signature":"OnCollisionExit2D(Collision2D other)","jsName":"OnCollisionExit2D"}],"jsClassName":"Cinemachine.CinemachineTriggerAction","originalClassName":"CinemachineTriggerAction"},{"constructors":[{"signature":"ActionSettings(Mode action)","jsName":"$ctor1"}],"methods":[{"signature":"Invoke()","jsName":"Invoke"}],"jsClassName":"Cinemachine.CinemachineTriggerAction.ActionSettings","originalClassName":"ActionSettings"},{"constructors":[{"signature":"DocumentationSortingAttribute(Level category)","jsName":"ctor"}],"methods":[],"jsClassName":"Cinemachine.DocumentationSortingAttribute","originalClassName":"DocumentationSortingAttribute"},{"constructors":[{"signature":"LensSettings(float fov, float orthographicSize, float nearClip, float farClip, float dutch)","jsName":"$ctor1"}],"methods":[{"signature":"FromCamera(Camera fromCamera)","jsName":"FromCamera"},{"signature":"Lerp(LensSettings lensA, LensSettings lensB, float t)","jsName":"Lerp"},{"signature":"SnapshotCameraReadOnlyProperties(Camera camera)","jsName":"SnapshotCameraReadOnlyProperties$1"},{"signature":"SnapshotCameraReadOnlyProperties(LensSettings lens)","jsName":"SnapshotCameraReadOnlyProperties"},{"signature":"Validate()","jsName":"Validate"}],"jsClassName":"Cinemachine.LensSettings","originalClassName":"LensSettings"},{"constructors":[],"methods":[{"signature":"GetValueAt(float time, float timeOffset)","jsName":"GetValueAt"}],"jsClassName":"Cinemachine.NoiseSettings+NoiseParams","originalClassName":"NoiseParams"},{"constructors":[],"methods":[{"signature":"GetValueAt(float time, Vector3 timeOffsets)","jsName":"GetValueAt"}],"jsClassName":"Cinemachine.NoiseSettings+TransformNoiseParams","originalClassName":"TransformNoiseParams"},{"constructors":[],"methods":[{"signature":"DestroyObject(Object obj)","jsName":"DestroyObject"}],"jsClassName":"Cinemachine.RuntimeUtility","originalClassName":"RuntimeUtility"},{"constructors":[],"methods":[{"signature":"InitializeModule()","jsName":"InitializeModule"},{"signature":"UpdateTargets(UpdateClock currentClock)","jsName":"UpdateTargets"},{"signature":"GetPreferredUpdate(Transform target)","jsName":"GetPreferredUpdate"},{"signature":"OnUpdate(UpdateClock currentClock)","jsName":"OnUpdate"}],"jsClassName":"Cinemachine.UpdateTracker","originalClassName":"UpdateTracker"},{"constructors":[{"signature":"UpdateStatus(Int32 currentFrame, Matrix4x4 pos)","jsName":"ctor"}],"methods":[{"signature":"OnUpdate(Int32 currentFrame, UpdateClock currentClock, Matrix4x4 pos)","jsName":"OnUpdate"}],"jsClassName":"Cinemachine.UpdateTracker.UpdateStatus","originalClassName":"UpdateStatus"},{"constructors":[],"methods":[{"signature":"ReleaseScreenPos(Object client)","jsName":"ReleaseScreenPos"},{"signature":"GetScreenPos(Object client, String text, GUIStyle style)","jsName":"GetScreenPos"},{"signature":"SBFromPool()","jsName":"SBFromPool"},{"signature":"ReturnToPool(StringBuilder sb)","jsName":"ReturnToPool"}],"jsClassName":"Cinemachine.Utility.CinemachineDebug","originalClassName":"CinemachineDebug"},{"constructors":[],"methods":[{"signature":"DecayConstant(float time, float residual)","jsName":"DecayConstant"},{"signature":"DecayedRemainder(float initial, float decayConstant, float deltaTime)","jsName":"DecayedRemainder"},{"signature":"Damp(float initial, float dampTime, float deltaTime)","jsName":"Damp"},{"signature":"Damp(Vector3 initial, Vector3 dampTime, float deltaTime)","jsName":"Damp$2"},{"signature":"Damp(Vector3 initial, float dampTime, float deltaTime)","jsName":"Damp$1"}],"jsClassName":"Cinemachine.Utility.Damper","originalClassName":"Damper"},{"constructors":[],"methods":[],"jsClassName":"Cinemachine.Utility.GaussianWindow1d$1","originalClassName":"GaussianWindow1d<T>"},{"constructors":[{"signature":"GaussianWindow1d(float sigma, Int32 maxKernelRadius)","jsName":"ctor"}],"methods":[{"signature":"GenerateKernel(float sigma, Int32 maxKernelRadius)","jsName":"GenerateKernel"},{"signature":"Reset()","jsName":"Reset"},{"signature":"IsEmpty()","jsName":"IsEmpty"},{"signature":"AddValue(T v)","jsName":"AddValue"},{"signature":"Filter(T v)","jsName":"Filter"},{"signature":"Value()","jsName":"Value"},{"signature":"SetBufferValue(Int32 index, T value)","jsName":"SetBufferValue"},{"signature":"GetBufferValue(Int32 index)","jsName":"GetBufferValue"}],"jsClassName":"Cinemachine.Utility.GaussianWindow1d$1","originalClassName":"GaussianWindow1d<T>"},{"constructors":[{"signature":"HeadingTracker(Int32 filterSize)","jsName":"ctor"}],"methods":[{"signature":"Decay(float time)","jsName":"Decay"},{"signature":"ClearHistory()","jsName":"ClearHistory"},{"signature":"Add(Vector3 velocity)","jsName":"Add"},{"signature":"PopBottom()","jsName":"PopBottom"},{"signature":"DecayHistory()","jsName":"DecayHistory"},{"signature":"GetReliableHeading()","jsName":"GetReliableHeading"}],"jsClassName":"Cinemachine.Utility.HeadingTracker","originalClassName":"HeadingTracker"},{"constructors":[],"methods":[{"signature":"ApplyTransformDelta(Vector3 positionDelta)","jsName":"ApplyTransformDelta"},{"signature":"Reset()","jsName":"Reset"},{"signature":"AddPosition(Vector3 pos, float deltaTime, float lookaheadTime)","jsName":"AddPosition"},{"signature":"PredictPositionDelta(float lookaheadTime)","jsName":"PredictPositionDelta"},{"signature":"PredictPosition(float lookaheadTime)","jsName":"PredictPosition"}],"jsClassName":"Cinemachine.Utility.PositionPredictor","originalClassName":"PositionPredictor"},{"constructors":[],"methods":[{"signature":"Bezier3(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)","jsName":"Bezier3"},{"signature":"BezierTangent3(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)","jsName":"BezierTangent3"},{"signature":"Bezier1(float t, float p0, float p1, float p2, float p3)","jsName":"Bezier1"},{"signature":"BezierTangent1(float t, float p0, float p1, float p2, float p3)","jsName":"BezierTangent1"},{"signature":"ComputeSmoothControlPoints(Vector4[] knot, Vector4[] ctrl1, Vector4[] ctrl2)","jsName":"ComputeSmoothControlPoints"},{"signature":"ComputeSmoothControlPointsLooped(Vector4[] knot, Vector4[] ctrl1, Vector4[] ctrl2)","jsName":"ComputeSmoothControlPointsLooped"}],"jsClassName":"Cinemachine.Utility.SplineHelpers","originalClassName":"SplineHelpers"},{"constructors":[],"methods":[{"signature":"SlerpWithReferenceUp(Quaternion qA, Quaternion qB, float t, Vector3 up)","jsName":"SlerpWithReferenceUp"},{"signature":"Normalized(Quaternion q)","jsName":"Normalized"},{"signature":"GetCameraRotationToTarget(Quaternion orient, Vector3 lookAtDir, Vector3 worldUp)","jsName":"GetCameraRotationToTarget"},{"signature":"ApplyCameraRotation(Quaternion orient, Vector2 rot, Vector3 worldUp)","jsName":"ApplyCameraRotation"}],"jsClassName":"Cinemachine.Utility.UnityQuaternionExtensions","originalClassName":"UnityQuaternionExtensions"},{"constructors":[],"methods":[{"signature":"Inflated(Rect r, Vector2 delta)","jsName":"Inflated"}],"jsClassName":"Cinemachine.Utility.UnityRectExtensions","originalClassName":"UnityRectExtensions"},{"constructors":[],"methods":[{"signature":"ClosestPointOnSegment(Vector3 p, Vector3 s0, Vector3 s1)","jsName":"ClosestPointOnSegment$1"},{"signature":"ClosestPointOnSegment(Vector2 p, Vector2 s0, Vector2 s1)","jsName":"ClosestPointOnSegment"},{"signature":"ProjectOntoPlane(Vector3 vector, Vector3 planeNormal)","jsName":"ProjectOntoPlane"},{"signature":"Abs(Vector3 v)","jsName":"Abs"},{"signature":"AlmostZero(Vector3 v)","jsName":"AlmostZero"},{"signature":"Angle(Vector3 v1, Vector3 v2)","jsName":"Angle"},{"signature":"SignedAngle(Vector3 v1, Vector3 v2, Vector3 up)","jsName":"SignedAngle"},{"signature":"SlerpWithReferenceUp(Vector3 vA, Vector3 vB, float t, Vector3 up)","jsName":"SlerpWithReferenceUp"}],"jsClassName":"Cinemachine.Utility.UnityVectorExtensions","originalClassName":"UnityVectorExtensions"},{"constructors":[],"methods":[{"signature":"OnPlayableDestroy(Playable playable)","jsName":"OnPlayableDestroy"},{"signature":"PrepareFrame(Playable playable, FrameData info)","jsName":"PrepareFrame"},{"signature":"ProcessFrame(Playable playable, FrameData info, Object playerData)","jsName":"ProcessFrame"},{"signature":"GetDeltaTime(float deltaTime)","jsName":"GetDeltaTime"}],"jsClassName":"CinemachineMixer","originalClassName":"CinemachineMixer"},{"constructors":[],"methods":[{"signature":"CreatePlayable(PlayableGraph graph, GameObject owner)","jsName":"CreatePlayable"},{"signature":"GatherProperties(PlayableDirector director, IPropertyCollector driver)","jsName":"GatherProperties"}],"jsClassName":"CinemachineShot","originalClassName":"CinemachineShot"},{"constructors":[],"methods":[{"signature":"Start()","jsName":"Start"},{"signature":"GetInputAxis(String axisName)","jsName":"GetInputAxis"}],"jsClassName":"CinemachineTouchInputMapper","originalClassName":"CinemachineTouchInputMapper"},{"constructors":[],"methods":[{"signature":"CreateTrackMixer(PlayableGraph graph, GameObject go, Int32 inputCount)","jsName":"CreateTrackMixer"}],"jsClassName":"CinemachineTrack","originalClassName":"CinemachineTrack"},{"constructors":[{"signature":"BlendSourceVirtualCamera(CinemachineBlend blend)","jsName":"ctor"}],"methods":[{"signature":"IsLiveChild(ICinemachineCamera vcam, Boolean dominantChildOnly)","jsName":"IsLiveChild"},{"signature":"UpdateCameraState(Vector3 worldUp, float deltaTime)","jsName":"UpdateCameraState"},{"signature":"InternalUpdateCameraState(Vector3 worldUp, float deltaTime)","jsName":"InternalUpdateCameraState"},{"signature":"OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)","jsName":"OnTransitionFromCamera"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"},{"signature":"CalculateNewState(float deltaTime)","jsName":"CalculateNewState"}],"jsClassName":"Cinemachine.BlendSourceVirtualCamera","originalClassName":"BlendSourceVirtualCamera"},{"constructors":[],"methods":[{"signature":"MutateCameraState(CameraState curState, float deltaTime)","jsName":"MutateCameraState"},{"signature":"ReSeed()","jsName":"ReSeed"},{"signature":"Initialize()","jsName":"Initialize"}],"jsClassName":"Cinemachine.CinemachineBasicMultiChannelPerlin","originalClassName":"CinemachineBasicMultiChannelPerlin"},{"constructors":[],"methods":[{"signature":"IsLiveChild(ICinemachineCamera vcam, Boolean dominantChildOnly)","jsName":"IsLiveChild"},{"signature":"UpdateCameraState(Vector3 worldUp, float deltaTime)","jsName":"UpdateCameraState"},{"signature":"OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)","jsName":"OnTransitionFromCamera"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"},{"signature":"AddExtension(CinemachineExtension extension)","jsName":"AddExtension"},{"signature":"RemoveExtension(CinemachineExtension extension)","jsName":"RemoveExtension"},{"signature":"InvokePostPipelineStageCallback(CinemachineVirtualCameraBase vcam, Stage stage, CameraState newState, float deltaTime)","jsName":"InvokePostPipelineStageCallback"},{"signature":"InvokeOnTransitionInExtensions(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)","jsName":"InvokeOnTransitionInExtensions"},{"signature":"ApplyPositionBlendMethod(CameraState state, BlendHint hint)","jsName":"ApplyPositionBlendMethod"},{"signature":"OnDestroy()","jsName":"OnDestroy"},{"signature":"OnTransformParentChanged()","jsName":"OnTransformParentChanged"},{"signature":"Start()","jsName":"Start"},{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"OnEnable()","jsName":"OnEnable"},{"signature":"OnDisable()","jsName":"OnDisable"},{"signature":"Update()","jsName":"Update"},{"signature":"UpdateSlaveStatus()","jsName":"UpdateSlaveStatus"},{"signature":"ResolveLookAt(Transform localLookAt)","jsName":"ResolveLookAt"},{"signature":"ResolveFollow(Transform localFollow)","jsName":"ResolveFollow"},{"signature":"UpdateVcamPoolStatus()","jsName":"UpdateVcamPoolStatus"},{"signature":"MoveToTopOfPrioritySubqueue()","jsName":"MoveToTopOfPrioritySubqueue"},{"signature":"CreateBlend(ICinemachineCamera camA, ICinemachineCamera camB, CinemachineBlendDefinition blendDef, CinemachineBlend activeBlend)","jsName":"CreateBlend"},{"signature":"PullStateFromVirtualCamera(Vector3 worldUp, LensSettings lens)","jsName":"PullStateFromVirtualCamera"}],"jsClassName":"Cinemachine.CinemachineVirtualCameraBase","originalClassName":"CinemachineVirtualCameraBase"},{"constructors":[],"methods":[{"signature":"DestroyCollider()","jsName":"DestroyCollider"},{"signature":"IsTargetObscured(ICinemachineCamera vcam)","jsName":"IsTargetObscured"},{"signature":"CameraWasDisplaced(ICinemachineCamera vcam)","jsName":"CameraWasDisplaced"},{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"OnDestroy()","jsName":"OnDestroy"},{"signature":"PostPipelineStageCallback(CinemachineVirtualCameraBase vcam, Stage stage, CameraState state, float deltaTime)","jsName":"PostPipelineStageCallback"},{"signature":"PreserveLignOfSight(CameraState state, VcamExtraState extra)","jsName":"PreserveLignOfSight"},{"signature":"PullCameraInFrontOfNearestObstacle(Vector3 cameraPos, Vector3 lookAtPos, Int32 layerMask, RaycastHit hitInfo)","jsName":"PullCameraInFrontOfNearestObstacle"},{"signature":"RaycastIgnoreTag(Ray ray, RaycastHit hitInfo, float rayLength, Int32 layerMask)","jsName":"RaycastIgnoreTag"},{"signature":"PushCameraBack(Vector3 currentPos, Vector3 pushDir, RaycastHit obstacle, Vector3 lookAtPos, Plane startPlane, float targetDistance, Int32 iterations, VcamExtraState extra)","jsName":"PushCameraBack"},{"signature":"GetWalkingDirection(Vector3 pos, Vector3 pushDir, RaycastHit obstacle, Vector3 outDir)","jsName":"GetWalkingDirection"},{"signature":"GetPushBackDistance(Ray ray, Plane startPlane, float targetDistance, Vector3 lookAtPos)","jsName":"GetPushBackDistance"},{"signature":"ClampRayToBounds(Ray ray, float distance, Bounds bounds)","jsName":"ClampRayToBounds"},{"signature":"RespectCameraRadius(Vector3 cameraPos, CameraState state)","jsName":"RespectCameraRadius"},{"signature":"CheckForTargetObstructions(CameraState state)","jsName":"CheckForTargetObstructions"},{"signature":"IsTargetOffscreen(CameraState state)","jsName":"IsTargetOffscreen"}],"jsClassName":"Cinemachine.CinemachineCollider","originalClassName":"CinemachineCollider"},{"constructors":[],"methods":[{"signature":"Start()","jsName":"Start"},{"signature":"OnEnable()","jsName":"OnEnable"},{"signature":"OnCollisionEnter(Collision c)","jsName":"OnCollisionEnter"},{"signature":"OnTriggerEnter(Collider c)","jsName":"OnTriggerEnter"},{"signature":"GetMassAndVelocity(Collider other, Vector3 vel)","jsName":"GetMassAndVelocity"},{"signature":"GenerateImpactEvent(Collider other, Vector3 vel)","jsName":"GenerateImpactEvent"},{"signature":"OnCollisionEnter2D(Collision2D c)","jsName":"OnCollisionEnter2D"},{"signature":"OnTriggerEnter2D(Collider2D c)","jsName":"OnTriggerEnter2D"},{"signature":"GetMassAndVelocity2D(Collider2D other2d, Vector3 vel)","jsName":"GetMassAndVelocity2D"},{"signature":"GenerateImpactEvent2D(Collider2D other2d, Vector3 vel)","jsName":"GenerateImpactEvent2D"}],"jsClassName":"Cinemachine.CinemachineCollisionImpulseSource","originalClassName":"CinemachineCollisionImpulseSource"},{"constructors":[],"methods":[{"signature":"GetLookAtPointAndSetTrackedPoint(Vector3 lookAt, Vector3 up, float deltaTime)","jsName":"GetLookAtPointAndSetTrackedPoint"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"},{"signature":"PrePipelineMutateCameraState(CameraState curState, float deltaTime)","jsName":"PrePipelineMutateCameraState"},{"signature":"MutateCameraState(CameraState curState, float deltaTime)","jsName":"MutateCameraState"},{"signature":"RotateToScreenBounds(CameraState state, Rect screenRect, Vector3 trackedPoint, Quaternion rigOrientation, float fov, float fovH, float deltaTime)","jsName":"RotateToScreenBounds"},{"signature":"ClampVerticalBounds(Rect r, Vector3 dir, Vector3 up, float fov)","jsName":"ClampVerticalBounds"}],"jsClassName":"Cinemachine.CinemachineComposer","originalClassName":"CinemachineComposer"},{"constructors":[],"methods":[{"signature":"CameraWasDisplaced(CinemachineVirtualCameraBase vcam)","jsName":"CameraWasDisplaced"},{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"PostPipelineStageCallback(CinemachineVirtualCameraBase vcam, Stage stage, CameraState state, float deltaTime)","jsName":"PostPipelineStageCallback"},{"signature":"InvalidatePathCache()","jsName":"InvalidatePathCache"},{"signature":"ValidatePathCache()","jsName":"ValidatePathCache"},{"signature":"ConfinePoint(Vector3 camPos)","jsName":"ConfinePoint"},{"signature":"ConfineScreenEdges(CinemachineVirtualCameraBase vcam, CameraState state)","jsName":"ConfineScreenEdges"}],"jsClassName":"Cinemachine.CinemachineConfiner","originalClassName":"CinemachineConfiner"},{"constructors":[],"methods":[{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"PostPipelineStageCallback(CinemachineVirtualCameraBase vcam, Stage stage, CameraState state, float deltaTime)","jsName":"PostPipelineStageCallback"}],"jsClassName":"Cinemachine.CinemachineFollowZoom","originalClassName":"CinemachineFollowZoom"},{"constructors":[],"methods":[{"signature":"GetScreenSpaceGroupBoundingBox(ICinemachineTargetGroup group, Vector3 pos, Quaternion orientation)","jsName":"GetScreenSpaceGroupBoundingBox"},{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"},{"signature":"OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime, TransitionParams transitionParams)","jsName":"OnTransitionFromCamera"},{"signature":"ScreenToOrtho(Rect rScreen, float orthoSize, float aspect)","jsName":"ScreenToOrtho"},{"signature":"OrthoOffsetToScreenBounds(Vector3 targetPos2D, Rect screenRect)","jsName":"OrthoOffsetToScreenBounds"},{"signature":"MutateCameraState(CameraState curState, float deltaTime)","jsName":"MutateCameraState"},{"signature":"GetTargetHeight(Vector2 boundsSize)","jsName":"GetTargetHeight"},{"signature":"ComputeGroupBounds(ICinemachineTargetGroup group, CameraState curState)","jsName":"ComputeGroupBounds"}],"jsClassName":"Cinemachine.CinemachineFramingTransposer","originalClassName":"CinemachineFramingTransposer"},{"constructors":[],"methods":[{"signature":"MutateCameraState(CameraState curState, float deltaTime)","jsName":"MutateCameraState"}],"jsClassName":"Cinemachine.CinemachineHardLockToTarget","originalClassName":"CinemachineHardLockToTarget"},{"constructors":[],"methods":[{"signature":"MutateCameraState(CameraState curState, float deltaTime)","jsName":"MutateCameraState"}],"jsClassName":"Cinemachine.CinemachineHardLookAt","originalClassName":"CinemachineHardLookAt"},{"constructors":[{"signature":"SignalSource(CinemachineImpulseDefinition def, Vector3 velocity)","jsName":"ctor"}],"methods":[{"signature":"GetSignal(float timeSinceSignalStart, Vector3 pos, Quaternion rot)","jsName":"GetSignal"}],"jsClassName":"Cinemachine.CinemachineImpulseDefinition.SignalSource","originalClassName":"SignalSource"},{"constructors":[],"methods":[{"signature":"PostPipelineStageCallback(CinemachineVirtualCameraBase vcam, Stage stage, CameraState state, float deltaTime)","jsName":"PostPipelineStageCallback"}],"jsClassName":"Cinemachine.CinemachineImpulseListener","originalClassName":"CinemachineImpulseListener"},{"constructors":[],"methods":[{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"MutateCameraState(CameraState curState, float deltaTime)","jsName":"MutateCameraState"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"},{"signature":"InitPrevFrameStateInfo(CameraState curState, float deltaTime)","jsName":"InitPrevFrameStateInfo"},{"signature":"TrackTarget(float deltaTime, Vector3 up, Vector3 desiredCameraOffset, Vector3 outTargetPosition, Quaternion outTargetOrient)","jsName":"TrackTarget"},{"signature":"GetTargetCameraPosition(Vector3 worldUp)","jsName":"GetTargetCameraPosition"},{"signature":"GetReferenceOrientation(Vector3 worldUp)","jsName":"GetReferenceOrientation"}],"jsClassName":"Cinemachine.CinemachineTransposer","originalClassName":"CinemachineTransposer"},{"constructors":[],"methods":[{"signature":"Reset()","jsName":"Reset"},{"signature":"GetBoundingIndices(float pos, Int32 indexA, Int32 indexB)","jsName":"GetBoundingIndices"},{"signature":"EvaluatePosition(float pos)","jsName":"EvaluatePosition"},{"signature":"EvaluateTangent(float pos)","jsName":"EvaluateTangent"},{"signature":"EvaluateOrientation(float pos)","jsName":"EvaluateOrientation"},{"signature":"OnValidate()","jsName":"OnValidate"}],"jsClassName":"Cinemachine.CinemachinePath","originalClassName":"CinemachinePath"},{"constructors":[],"methods":[{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"PrePipelineMutateCameraState(CameraState curState, float deltaTime)","jsName":"PrePipelineMutateCameraState"},{"signature":"MutateCameraState(CameraState curState, float deltaTime)","jsName":"MutateCameraState"},{"signature":"ApplyPOV(CameraState curState, float deltaTime)","jsName":"ApplyPOV"},{"signature":"GetRecenterTarget()","jsName":"GetRecenterTarget"},{"signature":"OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime, TransitionParams transitionParams)","jsName":"OnTransitionFromCamera"}],"jsClassName":"Cinemachine.CinemachinePOV","originalClassName":"CinemachinePOV"},{"constructors":[],"methods":[{"signature":"MutateCameraState(CameraState curState, float deltaTime)","jsName":"MutateCameraState"}],"jsClassName":"Cinemachine.CinemachineSameAsFollowTarget","originalClassName":"CinemachineSameAsFollowTarget"},{"constructors":[],"methods":[{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"Reset()","jsName":"Reset"},{"signature":"InvalidateDistanceCache()","jsName":"InvalidateDistanceCache"},{"signature":"UpdateControlPoints()","jsName":"UpdateControlPoints"},{"signature":"GetBoundingIndices(float pos, Int32 indexA, Int32 indexB)","jsName":"GetBoundingIndices"},{"signature":"EvaluatePosition(float pos)","jsName":"EvaluatePosition"},{"signature":"EvaluateTangent(float pos)","jsName":"EvaluateTangent"},{"signature":"EvaluateOrientation(float pos)","jsName":"EvaluateOrientation"}],"jsClassName":"Cinemachine.CinemachineSmoothPath","originalClassName":"CinemachineSmoothPath"},{"constructors":[],"methods":[{"signature":"StaticBlendingHandler(CinemachineBrain brain)","jsName":"StaticBlendingHandler"},{"signature":"InitializeModule()","jsName":"InitializeModule"},{"signature":"PostPipelineStageCallback(CinemachineVirtualCameraBase vcam, Stage stage, CameraState state, float wipeAmountTime)","jsName":"PostPipelineStageCallback"},{"signature":"ConnectToVcam(Boolean connect)","jsName":"ConnectToVcam"},{"signature":"CameraUpdatedCallback(CinemachineBrain brain)","jsName":"CameraUpdatedCallback"},{"signature":"LocateMyCanvas(CinemachineBrain parent, Boolean createIfNotFound)","jsName":"LocateMyCanvas"},{"signature":"CreateCanvas(CanvasInfo ci)","jsName":"CreateCanvas"},{"signature":"DestroyCanvas()","jsName":"DestroyCanvas"},{"signature":"PlaceImage(CanvasInfo ci, float alpha)","jsName":"PlaceImage"}],"jsClassName":"Cinemachine.CinemachineStoryboard","originalClassName":"CinemachineStoryboard"},{"constructors":[],"methods":[{"signature":"WeightedMemberBounds(Target t, Vector3 avgPos, float maxWeight)","jsName":"WeightedMemberBounds"},{"signature":"AddMember(Transform t, float weight, float radius)","jsName":"AddMember"},{"signature":"RemoveMember(Transform t)","jsName":"RemoveMember"},{"signature":"FindMember(Transform t)","jsName":"FindMember"},{"signature":"GetWeightedBoundsForMember(Int32 index)","jsName":"GetWeightedBoundsForMember"},{"signature":"GetViewSpaceBoundingBox(Matrix4x4 observer)","jsName":"GetViewSpaceBoundingBox"},{"signature":"DoUpdate()","jsName":"DoUpdate"},{"signature":"CalculateAveragePosition(Single maxWeight)","jsName":"CalculateAveragePosition"},{"signature":"CalculateAverageOrientation()","jsName":"CalculateAverageOrientation"},{"signature":"CalculateBoundingBox(Vector3 avgPos, float maxWeight)","jsName":"CalculateBoundingBox"},{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"FixedUpdate()","jsName":"FixedUpdate"},{"signature":"Update()","jsName":"Update"},{"signature":"LateUpdate()","jsName":"LateUpdate"},{"signature":"GetViewSpaceAngularBounds(Matrix4x4 observer, Vector2 minAngles, Vector2 maxAngles, Vector2 zRange)","jsName":"GetViewSpaceAngularBounds"}],"jsClassName":"Cinemachine.CinemachineTargetGroup","originalClassName":"CinemachineTargetGroup"},{"constructors":[],"methods":[{"signature":"MutateCameraState(CameraState curState, float deltaTime)","jsName":"MutateCameraState"},{"signature":"GetCameraOrientationAtPathPoint(Quaternion pathOrientation, Vector3 up)","jsName":"GetCameraOrientationAtPathPoint"}],"jsClassName":"Cinemachine.CinemachineTrackedDolly","originalClassName":"CinemachineTrackedDolly"},{"constructors":[{"signature":"StaticPointVirtualCamera(CameraState state, String name)","jsName":"ctor"}],"methods":[{"signature":"IsLiveChild(ICinemachineCamera vcam, Boolean dominantChildOnly)","jsName":"IsLiveChild"},{"signature":"UpdateCameraState(Vector3 worldUp, float deltaTime)","jsName":"UpdateCameraState"},{"signature":"InternalUpdateCameraState(Vector3 worldUp, float deltaTime)","jsName":"InternalUpdateCameraState"},{"signature":"OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)","jsName":"OnTransitionFromCamera"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"},{"signature":"SetState(CameraState state)","jsName":"SetState"}],"jsClassName":"Cinemachine.StaticPointVirtualCamera","originalClassName":"StaticPointVirtualCamera"},{"constructors":[{"signature":"GaussianWindow1D_CameraRotation(float sigma, Int32 maxKernelRadius)","jsName":"ctor"}],"methods":[{"signature":"Compute(Int32 windowPos)","jsName":"Compute"}],"jsClassName":"Cinemachine.Utility.GaussianWindow1D_CameraRotation","originalClassName":"GaussianWindow1D_CameraRotation"},{"constructors":[{"signature":"GaussianWindow1D_Quaternion(float sigma, Int32 maxKernelRadius)","jsName":"ctor"}],"methods":[{"signature":"Compute(Int32 windowPos)","jsName":"Compute"}],"jsClassName":"Cinemachine.Utility.GaussianWindow1D_Quaternion","originalClassName":"GaussianWindow1D_Quaternion"},{"constructors":[{"signature":"GaussianWindow1D_Vector3(float sigma, Int32 maxKernelRadius)","jsName":"ctor"}],"methods":[{"signature":"Compute(Int32 windowPos)","jsName":"Compute"}],"jsClassName":"Cinemachine.Utility.GaussianWindow1D_Vector3","originalClassName":"GaussianWindow1D_Vector3"},{"constructors":[],"methods":[{"signature":"PostPipelineStageCallback(CinemachineVirtualCameraBase vcam, Stage stage, CameraState state, float deltaTime)","jsName":"PostPipelineStageCallback"}],"jsClassName":"CinemachineCameraOffset","originalClassName":"CinemachineCameraOffset"},{"constructors":[],"methods":[{"signature":"IsLiveChild(ICinemachineCamera vcam, Boolean dominantChildOnly)","jsName":"IsLiveChild"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"},{"signature":"OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)","jsName":"OnTransitionFromCamera"},{"signature":"InternalUpdateCameraState(Vector3 worldUp, float deltaTime)","jsName":"InternalUpdateCameraState"},{"signature":"OnEnable()","jsName":"OnEnable"},{"signature":"OnDisable()","jsName":"OnDisable"},{"signature":"OnTransformChildrenChanged()","jsName":"OnTransformChildrenChanged"},{"signature":"OnGuiHandler()","jsName":"OnGuiHandler"},{"signature":"InvalidateListOfChildren()","jsName":"InvalidateListOfChildren"},{"signature":"UpdateListOfChildren()","jsName":"UpdateListOfChildren"},{"signature":"ValidateInstructions()","jsName":"ValidateInstructions"},{"signature":"AdvanceCurrentInstruction(float deltaTime)","jsName":"AdvanceCurrentInstruction"}],"jsClassName":"Cinemachine.CinemachineBlendListCamera","originalClassName":"CinemachineBlendListCamera"},{"constructors":[],"methods":[{"signature":"IsLiveChild(ICinemachineCamera vcam, Boolean dominantChildOnly)","jsName":"IsLiveChild"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"},{"signature":"InternalUpdateCameraState(Vector3 worldUp, float deltaTime)","jsName":"InternalUpdateCameraState"},{"signature":"OnEnable()","jsName":"OnEnable"},{"signature":"OnDisable()","jsName":"OnDisable"},{"signature":"OnTransformChildrenChanged()","jsName":"OnTransformChildrenChanged"},{"signature":"OnGuiHandler()","jsName":"OnGuiHandler"},{"signature":"InvalidateListOfChildren()","jsName":"InvalidateListOfChildren"},{"signature":"ResetRandomization()","jsName":"ResetRandomization"},{"signature":"UpdateListOfChildren()","jsName":"UpdateListOfChildren"},{"signature":"ChooseCurrentCamera(Vector3 worldUp)","jsName":"ChooseCurrentCamera"},{"signature":"Randomize(CinemachineVirtualCameraBase[] src)","jsName":"Randomize"},{"signature":"LookupBlend(ICinemachineCamera fromKey, ICinemachineCamera toKey)","jsName":"LookupBlend"},{"signature":"OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)","jsName":"OnTransitionFromCamera"}],"jsClassName":"Cinemachine.CinemachineClearShot","originalClassName":"CinemachineClearShot"},{"constructors":[],"methods":[{"signature":"InternalUpdateCameraState(Vector3 worldUp, float deltaTime)","jsName":"InternalUpdateCameraState"}],"jsClassName":"Cinemachine.CinemachineExternalCamera","originalClassName":"CinemachineExternalCamera"},{"constructors":[],"methods":[{"signature":"AxisDuration(AnimationCurve axis)","jsName":"AxisDuration"},{"signature":"GetSignal(float timeSinceSignalStart, Vector3 pos, Quaternion rot)","jsName":"GetSignal"},{"signature":"AxisValue(AnimationCurve axis, float time)","jsName":"AxisValue"}],"jsClassName":"Cinemachine.CinemachineFixedSignal","originalClassName":"CinemachineFixedSignal"},{"constructors":[],"methods":[{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"GetRig(Int32 i)","jsName":"GetRig"},{"signature":"OnEnable()","jsName":"OnEnable"},{"signature":"OnDestroy()","jsName":"OnDestroy"},{"signature":"OnTransformChildrenChanged()","jsName":"OnTransformChildrenChanged"},{"signature":"Reset()","jsName":"Reset"},{"signature":"IsLiveChild(ICinemachineCamera vcam, Boolean dominantChildOnly)","jsName":"IsLiveChild"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"},{"signature":"InternalUpdateCameraState(Vector3 worldUp, float deltaTime)","jsName":"InternalUpdateCameraState"},{"signature":"OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)","jsName":"OnTransitionFromCamera"},{"signature":"GetYAxisClosestValue(Vector3 cameraPos, Vector3 up)","jsName":"GetYAxisClosestValue"},{"signature":"InvalidateRigCache()","jsName":"InvalidateRigCache"},{"signature":"DestroyRigs()","jsName":"DestroyRigs"},{"signature":"CreateRigs(CinemachineVirtualCamera[] copyFrom)","jsName":"CreateRigs"},{"signature":"UpdateRigCache()","jsName":"UpdateRigCache"},{"signature":"LocateExistingRigs(String[] rigNames, Boolean forceOrbital)","jsName":"LocateExistingRigs"},{"signature":"UpdateXAxisHeading(CinemachineOrbitalTransposer orbital, float deltaTime, Vector3 up)","jsName":"UpdateXAxisHeading"},{"signature":"PushSettingsToRigs()","jsName":"PushSettingsToRigs"},{"signature":"GetYAxisValue()","jsName":"GetYAxisValue"},{"signature":"CalculateNewState(Vector3 worldUp, float deltaTime)","jsName":"CalculateNewState"},{"signature":"GetLocalPositionForCameraFromInput(float t)","jsName":"GetLocalPositionForCameraFromInput"},{"signature":"UpdateCachedSpline()","jsName":"UpdateCachedSpline"}],"jsClassName":"Cinemachine.CinemachineFreeLook","originalClassName":"CinemachineFreeLook"},{"constructors":[],"methods":[{"signature":"GetScreenSpaceGroupBoundingBox(ICinemachineTargetGroup group, Matrix4x4 observer, Vector3 newFwd)","jsName":"GetScreenSpaceGroupBoundingBox"},{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"MutateCameraState(CameraState curState, float deltaTime)","jsName":"MutateCameraState"},{"signature":"GetTargetHeight(Vector2 boundsSize)","jsName":"GetTargetHeight"}],"jsClassName":"Cinemachine.CinemachineGroupComposer","originalClassName":"CinemachineGroupComposer"},{"constructors":[],"methods":[{"signature":"GetWeight(Int32 index)","jsName":"GetWeight$1"},{"signature":"GetWeight(CinemachineVirtualCameraBase vcam)","jsName":"GetWeight"},{"signature":"SetWeight(Int32 index, float w)","jsName":"SetWeight$1"},{"signature":"SetWeight(CinemachineVirtualCameraBase vcam, float w)","jsName":"SetWeight"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"},{"signature":"OnEnable()","jsName":"OnEnable"},{"signature":"OnTransformChildrenChanged()","jsName":"OnTransformChildrenChanged"},{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"IsLiveChild(ICinemachineCamera vcam, Boolean dominantChildOnly)","jsName":"IsLiveChild"},{"signature":"InvalidateListOfChildren()","jsName":"InvalidateListOfChildren"},{"signature":"ValidateListOfChildren()","jsName":"ValidateListOfChildren"},{"signature":"OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)","jsName":"OnTransitionFromCamera"},{"signature":"InternalUpdateCameraState(Vector3 worldUp, float deltaTime)","jsName":"InternalUpdateCameraState"}],"jsClassName":"Cinemachine.CinemachineMixingCamera","originalClassName":"CinemachineMixingCamera"},{"constructors":[],"methods":[{"signature":"GetFullName(GameObject current)","jsName":"GetFullName"},{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"UpdateHeading(float deltaTime, Vector3 up, AxisState axis)","jsName":"UpdateHeading"},{"signature":"UpdateHeading(float deltaTime, Vector3 up, AxisState axis, Recentering recentering, Boolean isLive)","jsName":"UpdateHeading$1"},{"signature":"OnEnable()","jsName":"OnEnable"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"},{"signature":"OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime, TransitionParams transitionParams)","jsName":"OnTransitionFromCamera"},{"signature":"GetAxisClosestValue(Vector3 cameraPos, Vector3 up)","jsName":"GetAxisClosestValue"},{"signature":"MutateCameraState(CameraState curState, float deltaTime)","jsName":"MutateCameraState"},{"signature":"GetTargetCameraPosition(Vector3 worldUp)","jsName":"GetTargetCameraPosition"},{"signature":"GetTargetHeading(float currentHeading, Quaternion targetOrientation)","jsName":"GetTargetHeading"}],"jsClassName":"Cinemachine.CinemachineOrbitalTransposer","originalClassName":"CinemachineOrbitalTransposer"},{"constructors":[],"methods":[{"signature":"CreateFakeHash(Int32 parentHash, AnimationClip clip)","jsName":"CreateFakeHash"},{"signature":"IsLiveChild(ICinemachineCamera vcam, Boolean dominantChildOnly)","jsName":"IsLiveChild"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"},{"signature":"OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)","jsName":"OnTransitionFromCamera"},{"signature":"InternalUpdateCameraState(Vector3 worldUp, float deltaTime)","jsName":"InternalUpdateCameraState"},{"signature":"OnEnable()","jsName":"OnEnable"},{"signature":"OnDisable()","jsName":"OnDisable"},{"signature":"OnTransformChildrenChanged()","jsName":"OnTransformChildrenChanged"},{"signature":"OnGuiHandler()","jsName":"OnGuiHandler"},{"signature":"LookupFakeHash(Int32 parentHash, AnimationClip clip)","jsName":"LookupFakeHash"},{"signature":"InvalidateListOfChildren()","jsName":"InvalidateListOfChildren"},{"signature":"UpdateListOfChildren()","jsName":"UpdateListOfChildren"},{"signature":"ValidateInstructions()","jsName":"ValidateInstructions"},{"signature":"ChooseCurrentCamera()","jsName":"ChooseCurrentCamera"},{"signature":"GetClipHash(Int32 hash, List clips)","jsName":"GetClipHash"},{"signature":"LookupBlend(ICinemachineCamera fromKey, ICinemachineCamera toKey)","jsName":"LookupBlend"}],"jsClassName":"Cinemachine.CinemachineStateDrivenCamera","originalClassName":"CinemachineStateDrivenCamera"},{"constructors":[],"methods":[{"signature":"SetFlagsForHiddenChild(GameObject child)","jsName":"SetFlagsForHiddenChild"},{"signature":"InternalUpdateCameraState(Vector3 worldUp, float deltaTime)","jsName":"InternalUpdateCameraState"},{"signature":"OnEnable()","jsName":"OnEnable"},{"signature":"OnDestroy()","jsName":"OnDestroy"},{"signature":"OnValidate()","jsName":"OnValidate"},{"signature":"OnTransformChildrenChanged()","jsName":"OnTransformChildrenChanged"},{"signature":"Reset()","jsName":"Reset"},{"signature":"DestroyPipeline()","jsName":"DestroyPipeline"},{"signature":"CreatePipeline(CinemachineVirtualCamera copyFrom)","jsName":"CreatePipeline"},{"signature":"InvalidateComponentPipeline()","jsName":"InvalidateComponentPipeline"},{"signature":"GetComponentOwner()","jsName":"GetComponentOwner"},{"signature":"GetComponentPipeline()","jsName":"GetComponentPipeline"},{"signature":"GetCinemachineComponent(Stage stage)","jsName":"GetCinemachineComponent$1"},{"signature":"GetCinemachineComponent()","jsName":"GetCinemachineComponent"},{"signature":"AddCinemachineComponent()","jsName":"AddCinemachineComponent"},{"signature":"DestroyCinemachineComponent()","jsName":"DestroyCinemachineComponent"},{"signature":"UpdateComponentPipeline()","jsName":"UpdateComponentPipeline"},{"signature":"CalculateNewState(Vector3 worldUp, float deltaTime)","jsName":"CalculateNewState"},{"signature":"AdvancePipelineStage(CameraState state, float deltaTime, Stage curStage, Int32 maxStage, Boolean hasAim)","jsName":"AdvancePipelineStage"},{"signature":"SetStateRawPosition(Vector3 pos)","jsName":"SetStateRawPosition"},{"signature":"OnTargetObjectWarped(Transform target, Vector3 positionDelta)","jsName":"OnTargetObjectWarped"},{"signature":"OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)","jsName":"OnTransitionFromCamera"}],"jsClassName":"Cinemachine.CinemachineVirtualCamera","originalClassName":"CinemachineVirtualCamera"},{"constructors":[],"methods":[{"signature":"GetCombinedFilterResults(TransformNoiseParams[] noiseParams, float time, Vector3 timeOffsets)","jsName":"GetCombinedFilterResults"},{"signature":"GetSignal(float timeSinceSignalStart, Vector3 pos, Quaternion rot)","jsName":"GetSignal"}],"jsClassName":"Cinemachine.NoiseSettings","originalClassName":"NoiseSettings"}]}